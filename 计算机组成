计算机硬件的五大单元
输入单元、 输出单元、CPU内部的控制单元、算数逻辑单元与主内存五大部分

输入单元：包括键盘、鼠標、读卡机、扫描器、手写板、触控显示器等等一堆；
主机部分：这个就是系统单元，被主机机壳保护住了，里面含有 CPU、主内存等；
输出单元：例如显示屏、打印机等等

Central Processing Unit
算数逻辑单元
控制单元

CPU 为一个具有特定功能的芯片， 里头含有微指令集，如果你想要让主机进行什么特异的功能，就得要参考这颗 CPU 是否有相关内建的微指令集才可以
由于 CPU 的工作主要在于管理与运算，因此在 CPU 内又可分为两个主要的单元，分别是： 算数逻辑单元与控制单元。
其中算数逻辑单元主要负责程序运算与逻辑判断，控制单元则主要在协调各周边组件与各单元间的工作。

既然 CPU 的重点是在进行运算与判断，那么要被运算与判断的数据是从哪里来的？ CPU 读取的数据都是从主内存来的！ 
主内存内的数据则是从输入单元所传输进来！而 CPU 处理完毕的数据也必须要先写回主内存中， 最后数据才从主内存传输到输出单元。

CPU的种类
CPU其实内部已经含有一些小指令集，我们所使用的软件都要经过CPU内部的微指令集来达成才行。 
那这些指令集的设计主要又被分为两种设计理念，这就是目前世界上常见到的两种主要CPU种类： 分别是精简指令集(RISC)与复杂指令集(CISC)系统。
精简指令集(Reduced Instruction Set Computer, RISC)：
这种CPU的设计中，微指令集较为精简，每个指令的执行时间都很短，完成的动作也很单纯，指令的执行效能较佳； 但是若要做复杂的事情，就要由多个指令来完成。
常见的RISC微指令集CPU主要例如Sun公司的SPARC系列、 IBM公司的Power Architecture(包括PowerPC)系列、与ARM系列等。

在应用方面，SPARC架构的计算机常用於学术领域的大型工作站中，包括银行金融体系的主要服务器也都有这类的计算机架构； 
至于PowerPC架构的应用上，例如Sony公司出产的Play Station 3(PS3)就是使用PowerPC架构的Cell处理器； 
那ARM呢？你常使用的各厂牌手机、PDA、导航系统、网络设备(交换器、路由器等)等，几乎都是使用ARM架构的CPU

复杂指令集(Complex Instruction Set Computer, CISC)：
与RISC不同的，CISC在微指令集的每个小指令可以执行一些较低阶的硬件操作，指令数目多而且复杂， 每条指令的长度并不相同。
因为指令执行较为复杂所以每条指令花费的时间较长，但每条个别指令可以处理的工作较为丰富。常见的CISC微指令集CPU主要有AMD、Intel、VIA等的x86架构的CPU。

由于AMD、Intel、VIA所开发出来的x86架构CPU被大量使用於个人计算机(Personal computer)用途上面， 因此，个人计算机常被称为x86架构的计算机！
那为何称为x86架构呢？ 这是因为最早的那颗Intel发展出来的CPU代号称为8086，后来依此架构又开发出80286, 80386...， 因此这种架构的CPU就被称为x86架构了。

在2003年以前由Intel所开发的x86架构CPU由8位升级到16、32位，后来AMD依此架构修改新一代的CPU为64位， 为了区别两者的差异，
因此64位的个人计算机CPU又被统称为x86_64的架构！

那么不同的x86架构的CPU有什么差异呢？除了CPU的整体结构(如第二层缓存、每次运作可执行的指令数等)之外， 主要是在於微指令集的不同。
新的x86的CPU大多含有很先进的微指令集， 这些微指令集可以加速多媒体程序的运作，也能够加强虚拟化的效能，而且某些微指令集更能够增加能源效率，
让CPU耗电量降低。

周边设备
单有CPU也无法运作计算机的，所以计算机还需要其他的周边设备才能够实际运作。 除了前面稍到的输入/输出设备，以及CPU与主内存之外，还有什么周边设备呢？ 
其实最重要的周边设备是主机！因为主机板负责将所有的设备通通连接在一起，让所有的设备能够进行协调与沟通。 
而主机板上面最重要的组件就是主机板芯片组！这个芯片组可以将所有的设备汇集在一起！

其他重要的设备还有：
储存装置：储存装置包括硬盘、软盘、光盘、磁带等等；
显示装置：显示卡对於玩3D游戏来说是非常重要的一环，他与显示的精致度、色彩与解析度都有关系；
网络装置：没有网络活不下去啊！所以网络卡对於计算机来说也是相当重要的！

计算机分类
超级计算机(Supercomputer)          超级计算机是运作速度最快的计算机,用于国防军事、气象预测、太空科技，用在模拟的领域较多。
大型计算机(Mainframe Computer)     大型计算机通常也具有数个高速的CPU，功能上虽不及超级计算机，但也可用来处理大量数据与复杂的运算,如证券交易,或者是大型企业的数据库服务器等
迷你计算机(Minicomputer)           迷你计算机仍保有大型计算机同时支持多使用者的特性，但是主机可以放在一般作业场所,通常用来作为科学研究、工程分析与工厂的流程管理等
工作站(Workstation)                工作站的价格又比迷你计算机便宜许多，是针对特殊用途而设计的计算机,在学术研究与工程分析方面相当常见
微计算机(Microcomputer)            又可以称为个人计算机,体积最小,价格最低

计算机常用的计算单位 (容量、速度等)
计算机按照高低电平来记录信息，所以理论上它只认识 0 与 1 而已。0/1 的单位我们称为 bit。
但 bit 实在太小了， 并且在储存数据时每份简单的数据都会使用到 8 个 bits 的大小来记录，因此定义出 byte 这个单位，他们的关系为：
1 Byte = 8 bits
Byte 还是太小了，在较大的容量情况下，有一些常见的简化单位表示法，例如 K 代表 1024，M 代表 1024K 等
一般来说，档案容量使用的是二进位的方式，所以 1 GBytes 的档案大小实际上为：1024x1024x1024 Bytes 这么大
速度单位则常使用十进位，例如 1GHz 就是 1000x1000x1000 Hz 的意思

CPU的运算速度常使用 MHz 或者是 GHz 之类的单位，这个 Hz 其实就是秒分之一。而在网络传输方面，由於网络使用的是 bit 为单位，
因此网络常使用的单位为 Mbps 是 Mbits per second，亦即是每秒多少 Mbit。举例来说，大家常听到的 8M/1M ADSL 传输速度，如果转成档案容量的 byte 时，
其实理论最大传输值为：每秒 1Mbyte/ 每秒125Kbyte的上传/下载容量

个人计算机架构与周边设备
一般消费者常说的计算机通常指的就是x86的个人计算机架构。 事实上，Linux最早在发展的时候，就是依据个人计算机的架构来发展的.
另外，因为两大主流x86开发商(Intel, AMD)的CPU架构并不相容，而且设计理念也有所差异，所以两大主流CPU所需要的主机板芯片组设计也就不太相同。
目前(2009)最新的主机板架构主要是这样的:
Intel架构：
整个主机板上面最重要的就是芯片组了！
而芯片组通常又分为两个桥接器来控制各组件的沟通，分别是：
(1)北桥：负责连结速度较快的CPU、主内存与显示卡等组件；
(2)南桥：负责连接速度较慢的周边介面， 包括硬盘、USB、网络卡等等

AMD的芯片组架构:
主内存是直接与CPU沟通而不透过北桥
CPU的数据主要都是来自於主内存提供， 因此AMD为了加速这两者的沟通，所以将内存控制组件整合到CPU当中， 理论上这样可以加速CPU与主内存的传输速度！
这是两种CPU在架构上面主要的差异点。

CPU:
由於CPU负责大量运算，因此CPU通常是具有相当高发热量的组件。CPU上头通常会安插一颗风扇来主动散热的.
x86个人计算机的CPU主要供应商为Intel与AMD，目前(2009)主流的CPU都是双核以上的架构了！ 原本的单核心CPU仅有一个运算单元，
所谓的多核心则是在一颗CPU封装当中嵌入了两个以上的运算核心，简单的说，就是一个实体的CPU外壳中，含有两个以上的CPU单元.

CPU内部含有微指令集，不同的微指令集会导致CPU工作效率的优劣。除了这点之外， CPU效能的比较还有什么呢？那就是CPU的频率了！
什么是频率呢？简单的说， 频率就是CPU每秒钟可以进行的工作次数。 所以频率越高表示这颗CPU单位时间内可以作更多的事情

不同的CPU之间不能单纯的以频率来判断运算效能！这是因为每颗CPU的微指令集不相同，架构也不见得一样， 每次频率能够进行的工作指令数也不同之故！
所以，频率目前仅能用来比较同款CPU的速度.

CPU的"外频"与"倍频"
CPU与外部各组件的速度理论上应该要一致才好。
但是因为CPU需要较强大的运算能力,因为很多判断与数学都是在CPU内处理的，因此CPU开发商就在CPU内再加上一个加速功能,所以CPU有所谓的外频与倍频！
所谓的外频指的是CPU与外部组件进行数据传输时的速度，倍频则是 CPU 内部用来加速工作效能的一个倍数， 两者相乘才是CPU的频率速度.
以Intel Core 2 Duo E8400 CPU来说，他的频率是3.0GHz， 而外频是333MHz，因此倍频就是9倍！(3.0G=333Mx9, 其中1G=1000M)

所谓的超频指的是:将CPU的倍频或者是外频透过主机板的设定功能更改成较高频率的一种方式。但因为CPU的倍频通常在出厂时已经被锁定而无法修改， 
因此较常被超频的为外频。
举例来说，像上述3.0GHz的CPU如果想要超频,可以将他的外频333MHz调整成为400MHz，但如此一来整个主机板的各个组件的运作频率可能都会被增加成原本的1.333倍(4/3)， 
虽然CPU可能可以到达3.6GHz，但却因为频率并非正常速度，故可能会造成当机等问题.

32位与64位
前面谈到CPU运算的数据都是由主内存提供的，主内存与CPU的沟通速度靠的是外部频率，那么每次工作可以传送的数据量有多大呢？那就是系统总线的功能了

一般主机板芯片组有分北桥与南桥,北桥的系统总线称为系统系统总线,因为是内存传输的主要通道，所以速度较快。
南桥就是所谓的输入输出(I/O)系统总线，主要在联系硬盘、USB、网络卡等周边设备。

北桥所支持的频率我们称为前端系统总线速度(Front Side Bus, FSB)， 而每次传送的位数则是系统总线宽度。 
那所谓的系统总线频宽则是："FSBx系统总线宽度",亦即每秒钟可传送的最大数据量。 目前常见的系统总线宽度有32/64位(bits)。

CPU每次能够处理的数据量称为字长大小(word size)， 字长大小依据CPU的设计而有32位与64位。
我们现在所称的计算机是32或64位主要是依据这个 CPU解析的字长大小而来的！
早期的32位CPU中，因为CPU每次能够解析的数据量有限，因此由主内存传来的数据量就有所限制了。这也导致32位的CPU最多只能支持最大到4GBytes的内存。

内存：
CPU所使用的数据都是来自於主内存(main memory)，不论是软件程序还是数据，都必须要读入主内存后CPU才能利用。 
个人计算机的主内存主要组件为动态随机访问内存(Dynamic Random Access Memory, DRAM)， 随机访问内存只有在通电时才能记录与使用，断电后数据就消失了。
因此我们也称这种RAM为挥发性內存。

DRAM根据技术的更新又分好几代，而使用上较广泛的有所谓的SDRAM与DDR SDRAM两种。这两种内存的差别除了在於脚位与工作电压上的不同之外，DDR是所谓的双倍数据传送速度(Double Data Rate)， 
他可以在一次工作周期中进行两次数据的传送，感觉上就好像是CPU的倍频！所以传输频率方面比SDRAM还要好。

主内存型号的挑选与CPU及芯片组有关，所以主机板、CPU与内存在购买的时候必须要考虑其相关性。 并不是任何主机板都可以安插DDR III的內存

主内存除了频率/频宽与型号需要考虑之外，內存的容量也是很重要！因为所有的数据都得要载入內存当中才能够被CPU判读，
如果內存容量不够大的话将会导致某些大容量数据无法被完整的载入，此时已存在內存当中但暂时没有被使用到的数据必须要先被释放，
使得可用内存容量大於该数据，那份新数据才能够被载入！所以，通常越大的内存代表越快速的系统，这是因为系统不用常常释放一些内存内部的数据。
以服务器来说，主内存的容量有时比CPU的速度还要来的重要

双通道设计
由於所有的数据都必须要存放在主内存，所以主内存的数据宽度当然是越大越好。但传统的系统总线宽度一般大约仅达64位，为了要加大这个宽度，
因此芯片组厂商就将两个主内存汇整在一起， 如果一支内存可达64位，两支内存就可以达到128位了，这就是双通道的设计理念。

如上所述，要启用双通道的功能你必须要安插两支(或四支)主内存，这两支内存最好连型号都一模一样比较好，这是因为启动双通道内存功能时，
数据是同步写入/读出这一对主内存中，如此才能够提升整体的频宽啊！ 所以当然除了容量大小要一致之外，型号也最好相同

理论上，CPU与主内存的外频应该要相同才好。不过，因为技术方面的提升，因此这两者的频率速度不会相同， 但外频则应该是一致的较佳。
举例来说，上面提到的Intel E8400 CPU外频为333MHz，则应该选用DDR II 667这个型号， 因为该内存型号的外频为333MHz之故

第二层缓存
除了主内存之外，事实上整部个人计算机当中还有许许多多的内存存在！最为我们所知的就是CPU内的第二层缓存内存。 
我们现在知道CPU的数据都是由主内存提供，但主内存的数据毕竟得经由北桥送到CPU内。如果某些很常用的程序或数据可以放置到CPU内部的话，
那么CPU数据的读取就不需要透过北桥了！ 对於效能来说不就可以大大的提升了？这就是第二层缓存的设计概念。

因为第二层缓存(L2 cache)整合到CPU内部，因此这个L2内存的速度必须要CPU频率相同。 使用DRAM是无法达到这个频率速度的，
此时就需要静态随机访问内存(Static Random Access Memory, SRAM)的帮忙了。 SRAM在设计上使用的电晶体数量较多，价格较高，且不易做成大容量，
不过由於其速度快， 因此整合到CPU内成为缓存内存以加快数据的存取是个不错的方式喔！新一代的CPU都有内建容量不等的L2缓存在CPU内部， 以加快CPU的运作效能



主机板上面的组件是非常多的，而每个组件的参数又具有可调整性。举例来说，CPU与内存的频率是可调整的； 而主机板上面如果有内建的网络卡或者是显示卡时，
该功能是否要启动与该功能的各项参数，是被记录到主机板上头的一个称为CMOS的芯片上，这个芯片需要藉著额外的电源来发挥记录功能， 
这也是为什么你的主机板上面会有一颗电池的缘故。

那CMOS内的数据如何读取与更新呢？还记得你的计算机在开机的时候可以按下[Del]按键来进入一个名为BIOS的画面吧？ 
BIOS(Basic Input Output System)是一套程序，这套程序是写死到主机板上面的一个内存芯片中， 这个内存芯片在没有通电时也能够将数据记录下来，
那就是只读内存(Read Only Memory, ROM)。 ROM是一种非挥发性的内存。另外，BIOS对於个人计算机来说是非常重要的， 
因为他是系统在开机的时候首先会去读取的一个小程序！

另外，固件(firmware)很多也是使用ROM来进行软件的写入的,固件像软件一样也是一个被计算机所执行的程序，然而他是对於硬件内部而言更加重要的部分。
例如BIOS就是一个固件， BIOS虽然对於我们日常操作计算机系统没有什么太大的关系，但是他却控制著开机时各项硬件参数的取得！ 
所以我们会知道很多的硬件上头都会有ROM来写入固件这个软件。

BIOS对计算机系统来讲是非常重要的，因为他掌握了系统硬件的详细信息与开机设备的选择等等。
但是计算机发展的速度太快了， 因此 BIOS 程序码也可能需要作适度的修改才行，所以你才会在很多主机板官网找到 BIOS 的更新程序！
但是 BIOS 原本使用的是无法改写的 ROM ，因此根本无法修正 BIOS 程序码！为此，现在的 BIOS 通常是写入类似快闪内存 (flash) 或 EEPROM  中

显示卡又称为VGA(Video Graphics Array)，他对於图形影像的显示扮演相当关键的角色。 一般对於图形影像的显示重点在於解析度与色彩深度，
因为每个图像显示的颜色会占用掉内存， 因此显示卡上面会有一个内存的容量，这个显示卡内存容量将会影响到最终你的萤幕解析度与色彩深度的

除了显示卡内存之外，现在由於三度空间游戏(3D game)与一些3D动画的流行，因此显示卡的『运算能力』越来越重要。
一些3D的运算早期是交给CPU去运作的，但是CPU并非完全针对这些3D来进行设计的，而且CPU平时已经非常忙碌了！ 
所以后来显示卡厂商直接在显示卡上面嵌入一个3D加速的芯片，这就是所谓的GPU称谓的由来

显示卡主要也是透过北桥芯片与CPU、主内存等沟通
对於图形影像(尤其是3D游戏)来说， 显示卡也是需要高速运算的一个组件，所以数据的传输也是越快越好！因此显示卡的规格由早期的PCI导向AGP， 近期AGP又被PCI-Express规格所取代了

计算机总是需要记录与读取数据的，而这些数据当然不可能每次都由使用者经过键盘来打字！所以就需要有储存设备咯。 计算机系统上面的储存设备包括有：硬盘、软盘、MO、CD、DVD、磁带机、
随身碟(快闪内存)、还有新一代的蓝光光驱等， 乃至於大型机器的区域网络储存设备(SAN, NAS)等等，都是可以用来储存数据的。而其中最常见的应该就是硬盘了

硬盘
硬盘盒里面其实是由许许多多的圆形磁碟盘、机械手臂、 磁碟读取头与主轴马达所组成的
实际的数据都是写在具有磁性物质的磁碟盘上头，而读写主要是透过在机械手臂上的读取头(head)来达成。 实际运作时， 主轴马达让磁碟盘转动，然后机械手臂可伸展让读取头在磁碟盘上头进行读写的动作。 
另外，由於单一磁碟盘的容量有限，因此有的硬盘内部会有两个以上的磁碟盘

整个磁碟盘上头好像有多个同心圆绘制出的圆形图，而由圆心以放射状的方式分割出磁碟的最小储存单位，那就是磁区(Sector)， 在物理组成分面，每个磁区大小为512Bytes，这个值是不会改变的。
而磁区组成一个圆就成为磁轨(track)， 如果是在多碟的硬盘上面，在所有磁碟盘上面的同一个磁轨可以组成一个磁柱(Cylinder)， 磁柱也是一般我们分割硬盘时的最小单位了！

在计算整个硬盘的储存量时，简单的计算公式就是：『header数量 * 每个header负责的磁柱数量 * 每个磁柱所含有的磁区数量 * 磁区的容量』
简单的写法如下： Head x Cylinder x Sector x 512 Bytes
一般硬盘制造商在显示硬盘的容量时，大多是以十进位来编号

传输介面：
IDE介面：Integrated Device Electronics（ATA）
SATA（Serial ATA）
Parallel ATA（IDE）被称为PATA



运转须知
由於硬盘内部机械手臂上的磁头与硬盘盘的接触是很细微的空间， 如果有抖动或者是脏污在磁头与硬盘盘之间就会造成数据的损毁或者是实体硬盘整个损毁, 因此，
正确的使用计算机的方式，应该是在计算机通电之后，就绝对不要移动主机，并免抖动到硬盘， 而导致整个硬盘数据发生问题啊！
另外，也不要随便将插头拔掉就以为是顺利关机！因为机械手臂必须要归回原位， 所以使用操作系统的正常关机方式，才能够有比较好的硬盘保养！
因为他会让硬盘的机械手臂归回原位.

CMOS与BIOS
CMOS主要的功能为记录主机板上面的重要参数， 包括系统时间、CPU电压与频率、各项设备的I/O位址与IRQ等，由於这些数据的记录要花费电力，
因此主机板上面才有电池。 BIOS为写入到主机板上某一块 flash 或 EEPROM 的程序，他可以在开机的时候执行，以载入CMOS当中的参数，
并尝试呼叫储存装置中的开机程序，进一步进入操作系统当中。BIOS程序也可以修改CMOS中的数据， 每种主机板呼叫BIOS设定程序的按键都不同，
一般桌上型计算机常见的是使用[del]按键进入BIOS设定画面


数据表示方式
早期的计算机使用的是利用通电与否的特性的真空管，如果通电就是1，没有通电就是0， 后来沿用至今，我们称这种只有0/1的环境为二进位制，英文称为binary.
既然计算机都只有记录0/1而已，甚至记录的数据都是使用byte/bit等单位来记录的，那么文字该如何记录啊？ 事实上文字档案也是被记录为0与1而已，
而这个档案的内容要被取出来查阅时，必须要经过一个编码系统的处理才行。 所谓的『编码系统』可以想成是一个『字码对照表』类似于电报翻译。
当我们要写入档案的文字数据时，该文字数据会由编码对照表将该文字转成数字后，再存入档案当中。 同样的，当我们要将档案内容的数据读出时，
也会经过编码对照表将该数字转成对应的文字后，再显示到萤幕上。 现在你知道为何浏览器上面如果编码写错时，会出现乱码了吗？这是因为编码对照表写错， 
导致对照的文字产生误差之故。
常用的英文编码表为ASCII系统，这个编码系统中， 每个符号(英文、数字或符号等)都会占用1bytes的记录， 因此总共会有28=256种变化。


软件程序运作
计算机系统将软件分为两大类，一个是系统软件，一个是应用程序

机器程序与编译程序
计算机只认识0与1而已，而且计算机最重要的运算与逻辑判断是在CPU内部， 而CPU其实是具有微指令集的。因此，我们需要CPU帮忙工作时，就得要参考微指令集的内容， 
然后撰写让CPU读的懂得指令码给CPU执行，这样就能够让CPU运作了。
问题：
1.需要了解机器语言：机器只认识0与1，因此你必须要学习直接写给机器看的语言！这个地方相当的难！
2.需要了解所有硬件的相关功能函数：因为你的程序必须要写给机器用，当然你就得要参考机器本身的功能，然后针对该功能去撰写程序码。
  例如，你要让DVD影片能够放映， 那就得要参考DVD光驱的硬件信息才行。万一你的系统有比较冷门的硬件，光是参考技术手册可能会昏倒...
3.程序不具有可携性：每个CPU都有独特的微指令集，同样的，每个硬件都有其功能函数。 因此，你为A计算机写的程序，理论上是没有办法在B计算机上面运作的！
  而且程序码的修改非常困难！ 因为是机器码，并不是人类看的懂得程序语言！
4.程序具有专一性：因为这样的程序必须要针对硬件功能函数来撰写，如果已经开发了一支浏览器程序，想要再开发档案管理程序时，
  还是得从头再参考硬件的功能函数来继续撰写...
 
计算机科学家设计出一种让人类看的懂得程序语言， 然后创造一种『编译器』来将这些人类能够写的程序语言转译成为机器能看懂得机器码， 
如此一来我们修改与撰写程序就变的容易多了 
 
机器语言与高阶程序语言的差别就在于高阶程序有编译器来生成机器码，这样源码方便人查看，又能生成机器识别的机器码

程序的修改问题处理完毕。 问题又来了，在这样的环境底下我们还是得要考量整体的硬件系统来设计程序
举例来说，当你需要将运作的数据写入内存中，你就得要自行分配一个内存区块出来让自己的数据能够填上去， 所以你还得要了解到内存的位址是如何定位的
为了要克服硬件方面老是需要重复撰写控制码的问题，所以就有操作系统(Operating System, OS)的出现了

将所有的硬件都驱动，并且提供一个发展软件的参考介面来给工程师开发软件的话，那发展软件不就变的非常的简单了？这就是操作系统

操作系统核心(Kernel)
操作系统(Operating System, OS)其实也是一组程序， 这组程序的重点在於管理计算机的所有活动以及驱动系统中的所有硬件。
例如：操作系统的功能就是让CPU可以开始判断逻辑与运算数值、 让主内存可以开始载入/读出数据与程序码、让硬盘可以开始被存取、让网络卡可以开始传输数据、 
让所有周边可以开始运转等等。总之，硬件的所有动作都必须要透过这个操作系统来达成
上述的功能就是操作系统的核心(Kernel)了！计算机能不能做到某些事情，都与核心有关！ 只有核心有提供的功能，计算机系统才能帮你完成 

系统呼叫(System Call)
硬件都是由核心管理，那么如果我想要开发软件的话，自然就得要去参考这个核心的相关功能！如此一来不是从原本的参考硬件函数变成参考核心功能，还是很麻烦。
为了解决这个问题，操作系统通常会提供一整组的开发介面给工程师来开发软件！ 工程师只要遵守该开发介面那就很容易开发软件了！
举例来说，我们学习C程序语言只要参考C程序语言的函式即可,不需要再去考量其他核心的相关功能,因为核心的系统呼叫介面会主动的将C程序语言的相关语法转成核心可以了解的任务函数， 
那核心自然就能够顺利运作该程序了 
这样应用程序，呼叫系统，核心系统，硬件，从外到内一一关联进行处理，方便了软件开发

总的来讲
计算机系统主要由硬件构成，然后核心程序主要在管理硬件，提供合理的计算机系统资源分配(包括CPU资源、内存使用资源等等)， 
因此只要硬件不同(如x86架构与RISC架构的CPU)，核心就得要进行修改才行。 而由於核心只会进行计算机系统的资源分配，
所以还需要有应用程序的提供，使用者才能够操作系统的。
为了保护核心，并且让程序设计师比较容易开发软件，因此操作系统除了核心程序之外，通常还会提供一整组开发介面， 那就是系统呼叫层。
软件开发工程师只要遵循公认的系统呼叫参数来开发软件，该软件就能够在该核心上运作 
 
因此：
操作系统的核心层直接参考硬件规格写成， 所以同一个操作系统程序不能够在不一样的硬件架构下运作
操作系统只是在管理整个硬件资源，包括CPU、内存、输入输出装置及档案系统档。 如果没有其他的应用程序辅助，操作系统只能让计算机主机准备妥当(Ready)而已！并无法运作其他功能
应用程序的开发都是参考操作系统提供的开发介面， 所以该应用程序只能在该操作系统上面运作而已，不可以在其他操作系统上面运作的

操作系统核心功能：
系统呼叫介面(System call interface)：方便程序开发者可以轻易的透过与核心的沟通，将硬件的资源进一步的利用， 於是需要有这个简易的介面来方便程序开发者
程序管理(Process control)：CPU的资源有效分配,良好的CPU排程机制(就是CPU先运作那个工作的排列顺序)将会有效的加快整体系统效能
内存管理(Memory management):通常核心会提供虚拟内存的功能，当内存不足时可以提供内存置换(swap)的功能
档案系统管理(Filesystem management):(I/O)等的工作
装置的驱动(Device drivers)：驱动程序的提供应该是硬件厂商的事情！硬件厂商要推出硬件时，应该要自行参考操作系统的驱动程序开发介面， 
                           开发完毕后将该驱动程序连同硬件一同贩卖给使用者
 
操作系统与驱动程序
硬件是持续在进步当中,包括主机板、显示卡、硬盘等等。那么比较晚推出的较新的硬件,操作系统当然就不认识,
那操作系统该如何驱动这块新的显示卡？为了克服这个问题，操作系统通常会提供一个开发介面给硬件开发商， 让他们可以根据这个介面设计可以驱动他们硬件的『驱动程序』，
如此一来，只要使用者安装驱动程序后， 自然就可以在他们的操作系统上面驱动这块显示卡了
因此：
操作系统必须要能够驱动硬件，如此应用程序才能够使用该硬件功能；
一般来说，操作系统会提供开发介面，让开发商制作他们的驱动程序；
要使用新硬件功能，必须要安装厂商提供的驱动程序才行；
驱动程序是由厂商提供的，与操作系统开发者无关。
 
 
应用程序：
应用程序是参考操作系统提供的开发介面所开发出来软件，这些软件可以让使用者操作，以达到某些计算机的功能利用。 
举例来说，办公室软件(Office)主要是用来让使用者办公用的。


重点回顾：
计算机的定义为：『接受使用者输入指令与数据，经由中央处理器的数学与逻辑单元运算处理后，以产生或储存成有用的信息』；
计算机的五大单元包括：输入单元、 输出单元、CPU内部的控制单元、算数逻辑单元与主内存五大部分；
数据会流进/流出内存是CPU所发布的控制命令，而CPU实际要处理的数据则完全来自於主内存；
CPU依设计理念主要分为：精简指令集(RISC)与复杂指令集(CISC)系统；
关於CPU的频率部分：外频指的是CPU与外部组件进行数据传输时的速度，倍频则是CPU内部用来加速工作效能的一个倍数， 两者相乘才是CPU的频率速度；
一般主机板芯片组有分北桥与南桥，北桥的系统总线称为系统系统总线，因为是内存传输的主要通道，所以速度较快。 南桥就是所谓的输入输出(I/O)系统总线，主要在联系硬盘、USB、网络卡等周边设备；
北桥所支持的频率我们称为前端系统总线速度(Front Side Bus, FSB)，而每次传送的位数则是系统总线宽度。
CPU每次能够处理的数据量称为字长大小(word size)，字长大小依据CPU的设计而有32位与64位。 我们现在所称的计算机是32或64位主要是依据这个 CPU解析的字长大小而来的！
个人计算机的主内存主要组件为动态随机访问内存(Dynamic Random Access Memory, DRAM)， 至於CPU内部的第二层缓存则使用静态随机访问内存(Static Random Access Memory, SRAM)；
BIOS(Basic Input Output System)是一套程序，这套程序是写死到主机板上面的一个内存芯片中， 这个内存芯片在没有通电时也能够将数据记录下来，那就是只读内存(Read Only Memory, ROM)；
显示卡的规格有PCI/AGP/PCIe，目前的主流为PCIe介面；
硬盘的组成为：圆形磁碟盘、机械手臂、 磁碟读取头与主轴马达所组成的，其中磁碟盘的组成为磁区、磁轨与磁柱；
操作系统(Operating System, OS)其实也是一组程序， 这组程序的重点在於管理计算机的所有活动以及驱动系统中的所有硬件。
计算机主要以二进位作为单位，常用的磁碟容量单位为bytes，其单位换算为1 Byte = 8bits。
最阳春的操作系统仅在驱动与管理硬件，而要使用硬件时，就得需要透过应用软件或者是壳程序(shell)的功能， 来呼叫操作系统操纵硬件工作。目前称为操作系统的，除了上述功能外，通常已经包含了日常工作所需要的应用软件在内了。
 
感谢鸟哥，解释很详细！ 
