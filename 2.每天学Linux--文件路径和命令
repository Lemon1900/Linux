./ 指的是当前目录

../ 指的是当前目录的上一级目录

一、创建和删除
mkdir 创建一个目录，这个命令在上一章节中提及过。mkdir 其实就是make directory的缩写。其语法为 mkdir [-mp] [目录名称] ，其中-m , –p 为其选项，-m：这个参数用来指定要创建目录的权限，该参数不常用，所以笔者不做重点解释。
-p：这个参数很管用的 如果它发现要创建的目录的上一级目录不存在就会报错 它的作用就是递归创建目录，即使上级目录不存在。还有一种情况就是如果你想要创建的目录存在的话，会提示报错，然后你加上-p参数后，就不会报错了

rmdir 删除一个目录
rmdir 其实是rmove directory 缩写，其只有一个选项-p 类似与mkdir命令，这个参数的作用是将上级目录一起删除
如果一个目录中还有目录，那么当你直接rmdir 该目录时，会提示该目录不为空，不能删除。如果你非要删除不为空的目录，那你用rm指令吧。
rm 删除目录或者文件
rmdir 只能删除目录但不能删除文件，要想删除一个文件，则要用rm命令了。rm同样也有很多选项。你可以通过 man rm 来获得详细帮助信息。在这里笔者只列举较常用的几个选项。
-f 强制的意思，如果不加这个选项，当删除一个不存在的文件时会报错。
-i 这个选项的作用是，当用户删除一个文件时会提示用户是否真的删除。
如果删除，输入y 否则输入 n
-r 当删除目录时，加该选项，如果不加这个选项会报错。rm是可以删除不为空的目录的。

二、问题：
你会发现，笔者在列举的rm例子中使用的是绝对路径，而ls 则使用的相对路径。这是为什么呢？
which 用来查找一个命令的绝对路径
alias 用来设置指令的别名。语法：alias[别名]=[指令名称]，例如 alias rm='rm -i' ，即当我们使用rm命令时，实际上是使用的是rm –i ，而用绝对路径的/bin/rm 则不会被alias

上边提到了alias，也提到了绝对路径的/bin/rm ，然后你意识到没有，为什么我们输入很多命令时是直接打出了命令，而没有去使用这些命令的绝对路径？
这是因为环境变量PATH在起作用了。请输入 echo $PATH，这里的echo其实就是打印的意思，而PATH前面的$表示后面接的是变量。

因为/bin 在PATH的设定中，所以自然就可以找到ls了。如果你将 ls 移动到 /root 底下的话，然后你自己本身也在 /root 底下，但是当你执行 ls 的时候，他就是不理你？怎么办？
这是因为 PATH 没有 /root 这个目录，而你又将 ls 移动到 /root 底下了，自然系统就找不到可执行文件了，因此就会告诉你， command not found ！那么该怎么克服这种问题呢？
有两个方法，一种方法是直接将 /root 的路径加入 PATH 当中！如何增加？可以使用： 　
PATH=”$PATH”:/root
另一种方式则是使用完整档名，亦即直接使用相对或绝对路径来执行，例如：
/root/ls
或者：
./ls


其他
ls 查看某个目录或者某个文件，是list的简写。ls 后可以跟一个目录，也可以跟一个文件。以下是ls的选项
-a 全部的档案都列出，包括隐藏的。linux文件系统中同样也有隐藏文件。这些隐藏文件的文件名是以.开头的。例如.test, /root/.123, /root/.ssh 等等，隐藏文件可以是目录也可以是普通文件。
-l 详细列出文件的属性信息，包括大小、创建日期、所属主所属组等等。ll 这个命令等同于ls –l 。
--color=never/always/auto never即不要显示颜色，always 即总显示颜色，auto 是由系统自行判断。在Redhat/CentOS 系统中，默认是带颜色的，因为我们平时用的ls已经alias成了ls –color=tty 所以目录的颜色是蓝色的，而可执行文件的颜色是绿色。这样有助于帮我们区分文件的格式。
-d 后边跟目录，加上后只列车目录本身，如果不加这个选项则列出目录下的文件


cp copy的简写，即拷贝。格式为 cp [选项] [ 来源文件 ] [目的文件] ，例如我想把test1 拷贝成test2 ，这样即可 cp test1 test2
-d 这里涉及到一个“连接”的概念。连接分为软连接和硬连接。在以后的章节中会详细解释，现在你只要明白这里的软连接跟windows中的快捷方式类似即可。如果不加这个-d 则拷贝软连接时会把软连接的目标文件拷贝过去，而加上后，其实只是拷贝了一个连接文件（即快捷方式）。
-r 如果你要拷贝一个目录，必须要加-r选项，否则你是拷贝不了目录的。
-i 如果遇到一个存在的文件，会问是否覆盖。在Redhat/CentOS系统中，我们使用的cp其实是cp –i
-u 该选项仅当目标文件存在时才会生效，如果源文件比目标文件新才会拷贝，否则不做任何动作。

touch 命令，看字面意思就是摸一下，没错，如果有这个文件，则会改变文件的访问时间，如果没有这个文件就会创建这个文件
echo，其实就是打印，在这里所echo的内容”abc” 和 “def”并没有显示在屏幕上，而是分别写进了文件 111和222, 其写入作用的就是这个大于号”>” 在linux中这叫做重定向，即把前面产生的输出写入到后面的文件中
>>这个符号跟前面介绍的”>”的作用都是重定向，即把前面输出的东西输入到后边的文件中，只是”>>”是追加的意思，而用”>”，如果文件中有内容则会删除文件中内容，而”>>”则不会

cat 命令则是读一个文件，并把读出的内容打印到当前屏幕上 
-n 查看文件时，把行号也显示到屏幕上
-A 显示所有东西出来，包括特殊字符

tac 其实是cat的反写，同样的功能也是反向打印文件的内容到屏幕上


mv 移动的意思，是move的简写。格式为 mv [ 选项 ] [源文件] [目标文件]
-i 和cp的-i 一样，当目标文件存在时会问用户是否要覆盖。在Redhat/CentOS系统中，我们使用的mv其实是mv –i

-u 和上边cp 命令的-u选项一个作用，当目标文件存在时才会生效，如果源文件比目标文件新才会移动，否则不做任何动作
目标文件是目录，存在和不存在，移动的结果是不一样的，如果存在，则会把源文件移动到目标文件目录中。不存在的话移动完后，目标文件是一个文件？


windows下的重命名，在linux下用mv就可以搞定

more 也是用来查看一个文件的内容。当文件内容太多，一屏幕不能占下，而你用cat肯定是看不前面的内容的，那么使用more就可以解决这个问题了。当看完一屏后按空格键继续看下一屏。但看完所有内容后就会退出。如果你想提前退出，只需按q键即可。

less 作用跟more一样，但比more好在可以上翻，下翻。空格键同样可以翻页，而按”j”键可以向下移动（按一下就向下移动一行），按”k”键向上移动。在使用more和less查看某个文件时，你可以按一下”/” 键，然后输入一个word回车，这样就可以查找这个word了。
如果是多个该word可以按”n”键显示下一个。另外你也可以不按”/”而是按”?”后边同样跟word来搜索这个word，唯一不同的是，”/”是在当前行向下搜索，而”?”是在当前行向上搜索。


head后直接跟文件名，则显示文件的前十行。如果加 –n 选项则显示文件前n行。

tail 和head一样，后面直接跟文件名，则显示文件最后十行。如果加-n 选项则显示文件最后n行。
-f 动态显示文件的最后十行，如果文件是不断增加的，则用-f 选项
